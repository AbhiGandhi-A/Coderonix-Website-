// routes/tasks.js
const express = require('express');
const Task = require('../models/Task');
const User = require('../models/User');
const auth = require('../middleware/auth');

const router = express.Router();

// Create task
router.post('/', auth, async (req, res) => {
Â  try {
Â  Â  const { title, description, assigned_to, deadline } = req.body;

Â  Â  const task = new Task({
Â  Â  Â  group_id: req.user.group_id,
Â  Â  Â  title,
Â  Â  Â  description,
Â  Â  Â  assigned_to,
Â  Â  Â  deadline,
Â  Â  Â  created_by: req.user._id
Â  Â  });

Â  Â  await task.save();
Â  Â  await task.populate('assigned_to', 'name email');
Â  Â  await task.populate('created_by', 'name');

Â  Â  res.status(201).json(task);

Â  } catch (error) {
Â  Â  console.error(error);
Â  Â  res.status(500).json({ message: 'Server error' });
Â  }
});

// Get tasks for group
router.get('/', auth, async (req, res) => {
Â  try {
Â  Â  const tasks = await Task.find({ 
Â  Â  Â  group_id: req.user.group_id 
Â  Â  })
Â  Â  .populate('assigned_to', 'name email')
Â  Â  .populate('created_by', 'name')
Â  Â  .sort({ created_at: -1 });

Â  Â  res.json(tasks);

Â  } catch (error) {
Â  Â  console.error(error);
Â  Â  res.status(500).json({ message: 'Server error' });
Â  }
});

// Update task status
router.put('/:taskId/status', auth, async (req, res) => {
Â  try {
Â  Â  const { status } = req.body;
Â  Â  const userId = req.user._id;

Â  Â  const task = await Task.findById(req.params.taskId);
Â  Â  if (!task) {
Â  Â  Â  return res.status(404).json({ message: 'Task not found' });
Â  Â  }

Â  Â  // ðŸ’¡ NEW LOGIC: Only allow assigned users to update status
Â  Â  const isAssigned = task.assigned_to.some(id => id.toString() === userId.toString());
Â  Â  if (!isAssigned) {
Â  Â  Â  return res.status(403).json({ message: 'You are not authorized to update this task.' });
Â  Â  }

Â  Â  // ðŸ’¡ NEW LOGIC: If status is 'completed', set the completedBy field
Â  Â  if (status === 'completed') {
Â  Â  Â  task.completedBy = userId;
Â  Â  } else {
Â  Â  Â  // If status is changed from 'completed', clear the completedBy field
Â  Â  Â  task.completedBy = null;
Â  Â  }

Â  Â  task.status = status;
Â  Â  task.updated_at = Date.now();
Â  Â  await task.save();

Â  Â  await task.populate('assigned_to', 'name email');
Â  Â  await task.populate('created_by', 'name');

Â  Â  res.json(task);

Â  } catch (error) {
Â  Â  console.error(error);
Â  Â  res.status(500).json({ message: 'Server error' });
Â  }
});

// Get user's assigned tasks
router.get('/my-tasks', auth, async (req, res) => {
Â  try {
Â  Â  const tasks = await Task.find({ 
Â  Â  Â  assigned_to: req.user._id 
Â  Â  })
Â  Â  .populate('assigned_to', 'name email')
Â  Â  .populate('created_by', 'name')
Â  Â  .sort({ deadline: 1 });

Â  Â  res.json(tasks);

Â  } catch (error) {
Â  Â  console.error(error);
Â  Â  res.status(500).json({ message: 'Server error' });
Â  }
});

module.exports = router;